[project]
name = "testcraft"
version = "0.1.0"
description = "AI-powered test generation tool for Python projects"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "click>=8.2.1",
    "rich>=13.0.0",
    # Core config and validation
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "tomli-w>=1.0.0", # TOML writing support (reading via built-in tomllib)
    "pyyaml>=6.0", # YAML parsing for config handling in tests
    # AI/LLM SDKs - Latest versions as of September 2025
    "openai>=1.106.1", # OpenAI SDK v1.106.1
    "anthropic>=0.66.0", # Anthropic Claude SDK v0.66.0
    # Azure OpenAI uses the same openai package with Azure endpoint configuration
    "langchain-aws>=0.1.0", # AWS Bedrock via LangChain ChatBedrock
    "azure-identity>=1.15.0", # Azure AD authentication
    # HTTP and async support
    "httpx>=0.24.0", # Modern HTTP client for async support
    "aiofiles>=23.0.0", # Async file operations
    "textual>=6.1.0",
    "textual-dev>=1.7.0",
    "textual-web>=0.4.2",
]

[project.scripts]
testcraft = "testcraft.cli.main:app"

[project.optional-dependencies]
# Code formatting tools - users can install their preferred combination
formatters-ruff = ["ruff>=0.12.0"]
formatters-legacy = ["black>=23.0.0", "isort>=5.12.0"]
formatters-all = ["ruff>=0.12.0", "black>=23.0.0", "isort>=5.12.0"]

[tool.uv]
package = true

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"
# Development dependency group - configured correctly for PEP 735
# Install with: uv sync --group dev
# Or with pip: pip install -e .[dev] (requires converting to optional-dependencies)
[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pytest>=8.4.2",
    "pytest-asyncio>=0.23.7",
    "anyio>=4.10.0",
    "pytest-cov>=6.3.0",
    "ruff>=0.12.12",
    "pre-commit>=4.3.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
lint.ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=testcraft",
    "--cov-report=term-missing",
    "--cov-report=html",
]
