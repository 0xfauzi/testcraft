# Task ID: 30
# Title: Refactor oversized files to <=1000 lines, preserving architecture
# Status: pending
# Dependencies: None
# Priority: high
# Description: Split 11 large files into cohesive modules without behavioral change. Keep all public APIs stable, re-export from shims to avoid import churn, and enforce file-size limits going forward.
# Details:
Scope:
- Refactor each file >1000 lines into cohesive submodules
- Preserve clean architecture ports/adapters/use cases; no behavior change
- Maintain import paths via shims and __all__ re-exports
- Centralize shared helpers and AST-based logic
- Enforce TOML configs only; no YAML
- Post-refactor each file must be <1000 lines

Acceptance criteria:
- All existing tests pass; add/adjust tests for new module structure where needed
- No import path breakage; legacy imports continue to work
- Ruff + type checks pass
- CI size gate added to fail if any file exceeds 1000 lines
- Documentation/naming consistent with current conventions

# Test Strategy:
- Run full test suite before/after refactor; compare key outputs
- Verify public APIs unchanged via import smoke tests
- Add a lint rule or CI step to check file sizes
- Run Ruff (format+lint) and mypy/pyright if configured
- Manual spot checks for key adapters (evaluation, refine, openai)
